// Code generated by go-swagger; DO NOT EDIT.

package open

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetResumeHandlerFunc turns a function with the right signature into a get resume handler
type GetResumeHandlerFunc func(GetResumeParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetResumeHandlerFunc) Handle(params GetResumeParams) middleware.Responder {
	return fn(params)
}

// GetResumeHandler interface for that can handle valid get resume params
type GetResumeHandler interface {
	Handle(GetResumeParams) middleware.Responder
}

// NewGetResume creates a new http.Handler for the get resume operation
func NewGetResume(ctx *middleware.Context, handler GetResumeHandler) *GetResume {
	return &GetResume{Context: ctx, Handler: handler}
}

/*
	GetResume swagger:route GET /resume/{id} open getResume

# Get a resume by ID

Get a resume by ID
---
*/
type GetResume struct {
	Context *middleware.Context
	Handler GetResumeHandler
}

func (o *GetResume) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetResumeParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
